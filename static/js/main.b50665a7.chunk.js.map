{"version":3,"sources":["redux/slices/modal-slice.ts","Constants.ts","api/user-api.ts","redux/slices/user-slice.ts","redux/store.ts","components/Modal.tsx","assets/images/pariqsha.png","layouts/General.tsx","pages/Signin.tsx","pages/Signup.tsx","router/PrivateRoute.tsx","api/queries.ts","components/Card.tsx","components/Menu.tsx","layouts/Base.tsx","pages/Home.tsx","router/PublicRoute.tsx","router/AppRouter.tsx","api/apollo-client.ts","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["modalSlice","createSlice","name","initialState","visible","reducers","showModal","state","payload","hideModal","APPLICATION_ID","BASE_URL","LOGIN_URL","FORGOT_PASSWORD_URL","SIGNUP_URL","login","email","password","fetch","method","headers","body","JSON","stringify","loginId","applicationId","signup","data","Authorization","loginAction","createAsyncThunk","a","response","json","signupAction","saveEntities","entities","localStorage","setItem","userSlice","getItem","parse","getEntities","loading","logout","undefined","clear","extraReducers","builder","addCase","pending","fulfilled","rejected","store","configureStore","reducer","user","modal","Modal","useSelector","title","dispatch","useDispatch","className","aria-labelledby","role","aria-modal","onClick","actions","aria-hidden","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","id","GeneralLayout","children","useState","window","innerHeight","height","setHeight","innerWidth","width","setWidth","useEffect","addEventListener","style","ForgotPasswordBody","setEmail","htmlFor","onChange","e","target","value","inputMode","type","placeholder","forgotPassword","Signin","setPassword","General","src","logo","alt","to","onSubmit","preventDefault","autoFocus","autoComplete","Signup","cPassword","setCPassword","registration","PrivateRoute","rest","render","location","pathname","from","GET_TODAY_QUIZZES","gql","Card","subTitle","content","imgSrc","coverImgSrc","footer","date","time","duration","zoom","Menu","onClose","BaseLayout","actionButtons","isOpen","setIsOpen","flatMap","button","index","icon","today","Date","toISOString","Home","useQuery","variables","Base","quiz_quiz","quiz","image","whiteSpace","description","moment","start_at","format","cover","diff","end_at","humanize","topics","split","join","PublicRoute","AppRouter","token","client","setClient","authToken","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","ApolloProvider","path","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.b50665a7.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Modal } from \"../../types/Modal\";\n\nconst modalSlice = createSlice({\n  name: \"modal\",\n  initialState: {\n    visible: false,\n  } as Modal,\n  reducers: {\n    showModal: (state, { payload }: PayloadAction<Omit<Modal, \"visible\">>) => {\n      return { ...state, ...payload, visible: true };\n    },\n    hideModal: (state) => {\n      state.visible = false;\n    },\n  },\n});\n\nexport default modalSlice;\n","export const APPLICATION_ID = \"c38e1adf-afad-45f4-9017-a803290f3281\";\n\nexport const BASE_URL = `https://auth.app.pariqsha.com`;\nexport const GRAPHQL_URL = `https://hasura.app.pariqsha.com/v1/graphql`;\nexport const LOGIN_URL = `${BASE_URL}/api/login`;\nexport const FORGOT_PASSWORD_URL = `${BASE_URL}/api/user/forgot-password`;\nexport const SIGNUP_URL = `${BASE_URL}/api/user/registration/`;\n","import {\n  APPLICATION_ID,\n  FORGOT_PASSWORD_URL,\n  LOGIN_URL,\n  SIGNUP_URL,\n} from \"../Constants\";\nimport { SignupRequest } from \"../types/User\";\n\nexport const login = ({\n  email,\n  password,\n}: {\n  email: string;\n  password: string;\n}) => {\n  return fetch(LOGIN_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      loginId: email,\n      password,\n      applicationId: APPLICATION_ID,\n    }),\n  });\n};\n\nexport const signup = (data: SignupRequest) => {\n  return fetch(SIGNUP_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: \"seKKkbWSPZ2qtGWP6a2MWG-3WewgcdZeAZlBmInLexgTKFZPouYtZG6u\",\n    },\n    body: JSON.stringify(data),\n  });\n};\n\nexport const forgotPassword = (email: string) => {\n  return fetch(FORGOT_PASSWORD_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify({ loginId: email }),\n  });\n};\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { login, signup } from \"../../api/user-api\";\nimport {\n  SignupRequest,\n  SignupSigninResponse,\n  UserState,\n} from \"../../types/User\";\n\nexport const loginAction = createAsyncThunk(\n  \"users/login\",\n  async ({ email, password }: { email: string; password: string }) => {\n    const response = await login({\n      email,\n      password,\n    });\n    return (await response.json()) as SignupSigninResponse;\n  }\n);\n\nexport const signupAction = createAsyncThunk(\n  \"users/signup\",\n  async (data: SignupRequest) => {\n    const response = await signup(data);\n    return (await response.json()) as SignupSigninResponse;\n  }\n);\n\nfunction saveEntities(entities: SignupSigninResponse) {\n  localStorage.setItem(\"entities\", JSON.stringify(entities));\n}\n\nfunction getEntities(): SignupSigninResponse | undefined {\n  const entities = localStorage.getItem(\"entities\");\n  if (entities) {\n    return JSON.parse(entities) as SignupSigninResponse;\n  } else {\n    return undefined;\n  }\n}\n\nconst userSlice = createSlice<\n  UserState,\n  {\n    logout: (state: UserState) => void;\n  },\n  \"user\"\n>({\n  name: \"user\",\n  initialState: { entities: getEntities(), loading: \"idle\" },\n  reducers: {\n    logout: (state: UserState) => {\n      state.entities = undefined;\n      state.loading = \"idle\";\n      localStorage.clear();\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loginAction.pending, (state) => {\n      state.loading = \"pending\";\n    });\n    builder.addCase(\n      loginAction.fulfilled,\n      (state, { payload }: PayloadAction<SignupSigninResponse>) => {\n        state.loading = \"succeeded\";\n        saveEntities(payload);\n        state.entities = payload;\n      }\n    );\n    builder.addCase(loginAction.rejected, (state) => {\n      state.loading = \"failed\";\n    });\n    builder.addCase(signupAction.pending, (state) => {\n      state.loading = \"pending\";\n    });\n    builder.addCase(\n      signupAction.fulfilled,\n      (state, { payload }: PayloadAction<SignupSigninResponse>) => {\n        state.loading = \"succeeded\";\n        saveEntities(payload);\n        state.entities = payload;\n      }\n    );\n    builder.addCase(signupAction.rejected, (state) => {\n      state.loading = \"failed\";\n    });\n  },\n});\n\nexport default userSlice;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport modalSlice from \"./slices/modal-slice\";\nimport userSlice from \"./slices/user-slice\";\n\nconst store = configureStore({\n  reducer: {\n    user: userSlice.reducer,\n    modal: modalSlice.reducer,\n  },\n});\nexport type RootState = ReturnType<typeof store.getState>;\nexport default store;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport modalSlice from \"../redux/slices/modal-slice\";\nimport { RootState } from \"../redux/store\";\n\nconst Modal = () => {\n  const { title, visible, body } = useSelector(\n    (state: RootState) => state.modal\n  );\n  const dispatch = useDispatch();\n  if (!visible) return null;\n  return (\n    <div\n      className=\"fixed z-10 inset-0 overflow-y-auto\"\n      aria-labelledby=\"modal-title\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n    >\n      <div className=\"flex items-start justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div\n          onClick={() => dispatch(modalSlice.actions.hideModal())}\n          className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n          aria-hidden=\"true\"\n        ></div>\n\n        <span\n          className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n          aria-hidden=\"true\"\n        >\n          &#8203;\n        </span>\n\n        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 w-full max-w-2xl\">\n          <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n            <div className=\"sm:flex sm:items-start\">\n              <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\n                <svg\n                  className=\"h-6 w-6 text-red-600\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  aria-hidden=\"true\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n                  />\n                </svg>\n              </div>\n              <div className=\"mt-3 text-center flex-grow sm:mt-0 sm:ml-4 sm:text-left\">\n                <h3\n                  className=\"text-lg leading-6 font-medium text-gray-900\"\n                  id=\"modal-title\"\n                >\n                  {title}\n                </h3>\n                {body}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/pariqsha.8035258e.png\";","import { PropsWithChildren, useEffect, useState } from \"react\";\n\ninterface Props {}\n\nfunction GeneralLayout({ children }: PropsWithChildren<Props>) {\n  const [height, setHeight] = useState(window.innerHeight);\n  const [width, setWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setHeight(window.innerHeight);\n      setWidth(window.innerWidth);\n    });\n  }, []);\n  return (\n    <div style={{ width: width, height: height }} className=\"flex overflow-hidden flex-col flex-1\">\n      <div className=\"w-full flex-grow bg-gradient-to-tl overflow-y-auto pb-8 from-red-100 to-blue-100\">\n        {children}\n      </div>\n      <div className=\"text-center bg-white bg-opacity-50 shadow-sm text-gray-400 p-4 w-screen\">\n        &copy; Pariqsha, 2021. All rights reserved.\n      </div>\n    </div>\n  );\n}\n\nexport default GeneralLayout;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { forgotPassword } from \"../api/user-api\";\nimport logo from \"../assets/images/pariqsha.png\";\nimport GeneralLayout from \"../layouts/General\";\nimport modalSlice from \"../redux/slices/modal-slice\";\nimport { loginAction } from \"../redux/slices/user-slice\";\nimport { RootState } from \"../redux/store\";\n\nconst ForgotPasswordBody = () => {\n  const [email, setEmail] = useState(\"\");\n  return (\n    <>\n      <div className=\"mt-2 text-left text-sm text-gray-500\">\n        <form>\n          <div className=\"mb-4\">\n            <label\n              className=\"block mb-2 text-sm font-bold text-gray-700\"\n              htmlFor=\"email\"\n            >\n              Email\n            </label>\n            <input\n              className=\"w-full p-3 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n              id=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              inputMode=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email Address...\"\n            />\n          </div>\n        </form>\n      </div>\n      <div className=\"bg-gray-50 flex justify-end py-3 sm:px-6\">\n        <button\n          className=\"w-50 px-4 bg-blue-600 py-2 text-white rounded hover:bg-blue-700 focus:outline-none focus:shadow-outline\"\n          type=\"button\"\n          onClick={() => {\n            forgotPassword(email);\n          }}\n        >\n          Reset Password\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default function Signin() {\n  const { loading } = useSelector((state: RootState) => state.user);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  return (\n    <GeneralLayout>\n      <div className=\"max-w-md pt-8 mx-auto\">\n        <img src={logo} className=\"h-20 w-20 mx-auto\" alt=\"pariqsha logo\" />\n        <h1 className=\"text-md font-bold mt-4 text-center\">\n          Hi, Welcome to Pariqsha\n        </h1>\n        <div className=\"flex shadow bg-white mt-4 p-8 rounded m-auto text-center flex-col align-middle justify-center\">\n          <p className=\"my-4 text-gray-500\">\n            New here?\n            <Link\n              className=\"text-blue-400 hover:text-blue-600 ml-1\"\n              to=\"/signup\"\n            >\n              Sign up now...\n            </Link>\n          </p>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              dispatch(loginAction({ email, password }));\n            }}\n          >\n            <fieldset className=\"flex my-3 rounded flex-col max-w-lg mx-auto\">\n              <label className=\"text-left text-xs text-gray-500\" htmlFor=\"\">\n                Email\n              </label>\n              <input\n                autoFocus\n                type=\"text\"\n                className=\"input\"\n                onChange={(e) => setEmail(e.target.value)}\n                autoComplete=\"new-password\"\n                placeholder=\"john@doe.com\"\n              />\n              <label className=\"text-left text-xs text-gray-500\" htmlFor=\"\">\n                Password\n              </label>\n              <input\n                type=\"password\"\n                className=\"input\"\n                onChange={(e) => setPassword(e.target.value)}\n                autoComplete=\"new-password\"\n                placeholder=\"*******\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => {\n                  dispatch(\n                    modalSlice.actions.showModal({\n                      title: \"Forgot Password\",\n                      body: <ForgotPasswordBody />,\n                    })\n                  );\n                }}\n                className=\"text-blue-300 text-sm hover:text-blue-500 focus:outline-none mb-3 self-end\"\n              >\n                Forgot Your Password? Click here...\n              </button>\n              <button className=\"button mt-3 self-end\">\n                {loading === \"pending\"\n                  ? \"Logging In...\"\n                  : loading === \"succeeded\"\n                  ? \"Login Successful\"\n                  : \"Login\"}\n              </button>\n            </fieldset>\n          </form>\n        </div>\n      </div>\n    </GeneralLayout>\n  );\n}\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../assets/images/pariqsha.png\";\nimport { APPLICATION_ID } from \"../Constants\";\nimport GeneralLayout from \"../layouts/General\";\nimport { signupAction } from \"../redux/slices/user-slice\";\nimport { RootState } from \"../redux/store\";\n\nexport default function Signup() {\n  const { loading } = useSelector((state: RootState) => state.user);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [cPassword, setCPassword] = useState(\"\");\n  const dispatch = useDispatch();\n\n  return (\n    <GeneralLayout>\n      <div className=\"max-w-md pt-8 mx-auto\">\n        <img src={logo} className=\"h-20 w-20 mx-auto\" alt=\"pariqsha logo\" />\n        <h1 className=\"text-md font-bold mt-4 text-center\">\n          Hi, Welcome to Pariqsha\n        </h1>\n        <div className=\"flex shadow bg-white mt-4 p-8 rounded m-auto text-center flex-col align-middle justify-center\">\n          <p className=\"my-4 text-gray-500\">\n            Already registered?\n            <Link\n              className=\"text-blue-400 hover:text-blue-600 ml-1\"\n              to=\"/signin\"\n            >\n              Sign in here...\n            </Link>\n          </p>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              if (cPassword !== password) {\n                return;\n              }\n              dispatch(\n                signupAction({\n                  registration: {\n                    applicationId: APPLICATION_ID,\n                  },\n                  user: {\n                    email,\n                    password,\n                  },\n                })\n              );\n            }}\n          >\n            <fieldset className=\"flex my-3 rounded flex-col max-w-lg mx-auto\">\n              <label className=\"text-left text-xs text-gray-500\" htmlFor=\"\">\n                Email\n              </label>\n              <input\n                autoFocus\n                type=\"text\"\n                className=\"input\"\n                onChange={(e) => setEmail(e.target.value)}\n                autoComplete=\"new-password\"\n                placeholder=\"john@doe.com\"\n              />\n              <label className=\"text-left text-xs text-gray-500\" htmlFor=\"\">\n                Enter a Password\n              </label>\n              <input\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n                className=\"input\"\n                autoComplete=\"new-password\"\n                placeholder=\"*******\"\n              />\n              <label className=\"text-left text-xs text-gray-500\" htmlFor=\"\">\n                Confirm your Password\n              </label>\n              <input\n                type=\"password\"\n                onChange={(e) => setCPassword(e.target.value)}\n                className=\"input\"\n                autoComplete=\"new-password\"\n                placeholder=\"*******\"\n              />\n              <label className=\"inline-flex items-center\">\n                <input type=\"checkbox\" />\n                <span className=\"ml-2 text-gray-600\">\n                  I agree to terms &amp; conditions\n                </span>\n              </label>\n              <button className=\"button mt-3 self-end\">\n                {\" \"}\n                {loading === \"pending\"\n                  ? \"Signing up...\"\n                  : loading === \"succeeded\"\n                  ? \"Signed up Successful\"\n                  : \"Signup\"}\n              </button>\n            </fieldset>\n          </form>\n        </div>\n      </div>\n    </GeneralLayout>\n  );\n}\n","import { PropsWithChildren } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\nconst PrivateRoute = ({ children, ...rest }: PropsWithChildren<RouteProps>) => {\n  const entities = useSelector((state: RootState) => state.user.entities);\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        entities?.user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/signin\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_TODAY_QUIZZES = gql`\n  query get_today_quizzes($date: timestamptz!) {\n    quiz_quiz(where: { end_at: { _gte: $date } }) {\n      cover\n      created_at\n      description\n      end_at\n      id\n      image\n      start_at\n      title\n      topics\n    }\n  }\n`;\n","import { ReactElement } from \"react\";\n\ninterface Props {\n  title?: string;\n  subTitle?: string;\n  content?: ReactElement;\n  imgSrc?: string;\n  coverImgSrc?: string;\n  footer?: ReactElement;\n  date?: string;\n  time?: string;\n  duration?: string;\n}\n\nexport default function Card({\n  title,\n  subTitle,\n  content,\n  imgSrc,\n  coverImgSrc,\n  footer,\n  date,\n  time,\n  duration,\n}: Props): ReactElement {\n  return (\n    <div\n      className=\"w-full max-w-md bg-white border-2 flex flex-col overflow-hidden border-gray-300 rounded-md tracking-wide shadow-lg\"\n      style={{ zoom: 0.8 }}\n    >\n      {coverImgSrc && (\n        <div className=\"relative\">\n          {date && (\n            <div className=\"absolute top-0 bottom-0 my-auto w-full flex flex-col justify-center items-end bg-opacity-20 bg-black right-0 text-gray-200 text-2xl font-bold\">\n              <span className=\"bg-blue-700 py-4 px-8 bg-opacity-80 rounded-l-md\">\n                {date}\n              </span>\n              <span className=\"bg-blue-700 py-2 mt-2 text-sm px-8 bg-opacity-70  rounded-l-md\">\n               starts {time}\n              </span>\n            </div>\n          )}\n          <img\n            className=\"w-full h-48 object-cover object-center\"\n            src={coverImgSrc}\n            alt=\"cover\"\n          />\n        </div>\n      )}\n      <div className=\"p-6 flex-grow\">\n        <div id=\"header\" className=\"flex items-center mb-4\">\n          {imgSrc && (\n            <img\n              alt=\"avatar\"\n              className=\"w-16 h-16 object-contain rounded-full border-2 border-gray-300\"\n              src={imgSrc}\n            />\n          )}{\" \"}\n          <div id=\"header-text\" className=\"leading-5 ml-6 sm\">\n            <h4 id=\"name\" className=\"text-xl font-semibold\">\n              {title}<span className=\"text-sm ml-4 text-gray-600\">({duration})</span>\n            </h4>\n\n            <h5 id=\"job\" className=\"font-semibold text-blue-600\">\n              {subTitle}\n            </h5>\n          </div>\n        </div>\n        <div>{content}</div>\n      </div>\n      {footer && (\n        <div className=\"border-t-2 flex  flex-row px-6 py-3 items-center\">\n          {footer}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport userSlice from \"../redux/slices/user-slice\";\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst Menu = ({ onClose }: Props) => {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"w-screen h-full flex flex-row bg-gray-100\">\n      <div className=\"flex flex-col bg-white w-screen overflow-hidden\">\n        <div className=\"flex items-center justify-start text-3xl py-2 px-4\">\n          <button\n            onClick={() => {\n              onClose();\n            }}\n            className=\"focus:outline-none lg:hidden\"\n          >\n            &times;\n          </button>\n        </div>\n        <ul className=\"flex flex-col py-4\">\n          <li>\n            <Link\n              className=\"flex flex-row items-center h-12 transform hover:translate-x-2 transition-transform ease-in duration-200 text-gray-500 hover:text-gray-800\"\n              to=\"/home\"\n              onClick={() => onClose()}\n            >\n              <span className=\"inline-flex items-center justify-center h-12 w-12\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"text-gray-400 h-5 w-5 fill-current\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M21.743,12.331l-9-10c-0.379-0.422-1.107-0.422-1.486,0l-9,10c-0.265,0.293-0.331,0.715-0.17,1.076 C2.247,13.768,2.605,14,3,14h2v7c0,0.552,0.447,1,1,1h3c0.553,0,1-0.448,1-1v-4h4v4c0,0.552,0.447,1,1,1h3c0.553,0,1-0.448,1-1v-7h2 c0.395,0,0.753-0.232,0.913-0.593C22.074,13.046,22.008,12.625,21.743,12.331z\"></path>\n                </svg>\n              </span>\n              <span className=\"text-sm font-medium\">Home</span>\n            </Link>\n          </li>\n          <li>\n            <Link\n              className=\"flex flex-row items-center h-12 transform hover:translate-x-2 transition-transform ease-in duration-200 text-gray-500 hover:text-gray-800\"\n              to=\"/signin\"\n              onClick={() => {\n                dispatch(userSlice.actions.logout());\n                onClose();\n              }}\n            >\n              <span className=\"inline-flex items-center justify-center h-12 w-12\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5 fill-current text-gray-400\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M16 13L16 11 7 11 7 8 2 12 7 16 7 13z\"></path>\n                  <path d=\"M20,3h-9C9.897,3,9,3.897,9,5v4h2V5h9v14h-9v-4H9v4c0,1.103,0.897,2,2,2h9c1.103,0,2-0.897,2-2V5C22,3.897,21.103,3,20,3z\"></path>\n                </svg>{\" \"}\n              </span>\n              <span className=\"text-sm font-medium\">Logout</span>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","import { PropsWithChildren, useEffect, useState } from \"react\";\nimport Menu from \"../components/Menu\";\n\ninterface ActionButton {\n  icon: JSX.Element;\n  onClick: () => void;\n}\n\ninterface Props {\n  title?: string;\n  actionButtons?: ActionButton[];\n}\n\nfunction BaseLayout({\n  children,\n  title = \"Pariqsha\",\n  actionButtons = [],\n}: PropsWithChildren<Props>) {\n  const [height, setHeight] = useState(window.innerHeight);\n  const [width, setWidth] = useState(window.innerWidth);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setHeight(window.innerHeight);\n      setWidth(window.innerWidth);\n    });\n  }, []);\n  return (\n    <div\n      style={{ width: width, height: height }}\n      className=\"flex overflow-hidden flex-col flex-1\"\n    >\n      <div\n        className={`fixed overflow-hidden transition-width duration-500 top-0 left-0 ${\n          isOpen ? \"w-80\" : \"w-0 lg:w-80\"\n        }`}\n        style={{ height: height }}\n      >\n        <Menu\n          onClose={() => {\n            setIsOpen(false);\n          }}\n        />\n      </div>\n      <div className=\"shadow-sm items-center lg:pl-80 flex flex-row gap-4 p-4 w-screen \">\n        <svg\n          onClick={() => {\n            setIsOpen(true);\n          }}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-6 w-6 cursor-pointer lg:hidden\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M4 6H20V8H4zM4 11H20V13H4zM4 16H20V18H4z\"></path>\n        </svg>\n        <h4 className=\"text-lg font-semibold lg:ml-8\">{title}</h4>\n        <div className=\"flex-grow justify-end flex\">\n          {actionButtons.flatMap((button, index) => (\n            <div key={index} onClick={button.onClick}>\n              {button.icon}\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"w-full lg:pl-96 flex-grow bg-gradient-to-tl overflow-y-auto pb-8 from-red-100 to-blue-100\">\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default BaseLayout;\n","import { useQuery } from \"@apollo/client\";\nimport moment from \"moment\";\nimport { GET_TODAY_QUIZZES } from \"../api/queries\";\nimport Card from \"../components/Card\";\nimport BaseLayout from \"../layouts/Base\";\nimport { QuizResponse } from \"../types/Quiz\";\n\nconst today = new Date().toISOString();\n\nexport default function Home() {\n  const { data } = useQuery<QuizResponse>(GET_TODAY_QUIZZES, {\n    variables: {\n      date: today,\n    },\n  });\n  return (\n    <BaseLayout\n      actionButtons={[\n        {\n          icon: (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-5 w-5 fill-current text-gray-500\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M12 22c1.311 0 2.407-.834 2.818-2H9.182C9.593 21.166 10.689 22 12 22zM19 14.586V10c0-3.217-2.185-5.927-5.145-6.742C13.562 2.52 12.846 2 12 2s-1.562.52-1.855 1.258C7.185 4.074 5 6.783 5 10v4.586l-1.707 1.707C3.105 16.48 3 16.734 3 17v1c0 .553.447 1 1 1h16c.553 0 1-.447 1-1v-1c0-.266-.105-.52-.293-.707L19 14.586z\"></path>\n            </svg>\n          ),\n          onClick: () => {},\n        },\n      ]}\n    >\n      <div className=\"flex flex-col items-center p-4 gap-4\">\n        <h2 className=\"place-self-start text-3xl font-semibold pt-6\">\n          Upcoming Quizzes\n        </h2>\n        <div className=\"flex flex-row flex-wrap gap-4 w-full\">\n          {data?.quiz_quiz?.flatMap((quiz, index) => (\n            <Card\n              key={index}\n              title={quiz.title}\n              imgSrc={quiz.image}\n              content={\n                <div style={{ whiteSpace: \"pre-wrap\" }}>{quiz.description}</div>\n              }\n              date={moment(quiz.start_at).format(\"Do MMM\")}\n              coverImgSrc={quiz.cover}\n              time={moment(quiz.start_at).format(\"h:mm A\")}\n              duration={moment\n                .duration(moment(quiz.start_at).diff(moment(quiz.end_at)))\n                .humanize()}\n              subTitle={quiz.topics.split(\",\").join(\", \")}\n              footer={\n                <>\n                  <button className=\"button\">Register</button>\n                </>\n              }\n            />\n          ))}\n        </div>\n      </div>\n    </BaseLayout>\n  );\n}\n","import { PropsWithChildren } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\nconst PublicRoute = ({ children, ...rest }: PropsWithChildren<RouteProps>) => {\n  const entities = useSelector((state: RootState) => state.user.entities);\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        entities?.user ? (\n          <Redirect\n            to={{\n              pathname: \"/home\",\n              state: { from: location },\n            }}\n          />\n        ) : (\n          children\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import Signin from \"../pages/Signin\";\nimport Signup from \"../pages/Signup\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Home from \"../pages/Home\";\nimport PublicRoute from \"./PublicRoute\";\nimport { createApolloClient } from \"../api/apollo-client\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/store\";\nimport { useEffect, useState } from \"react\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  NormalizedCacheObject,\n} from \"@apollo/client\";\n\nexport default function AppRouter() {\n  const token = useSelector((state: RootState) => state.user.entities?.token);\n  const [client, setClient] = useState<ApolloClient<NormalizedCacheObject>>();\n  useEffect(() => {\n    setClient(createApolloClient(token || \"\"));\n  }, [token]);\n\n  return client ? (\n    <ApolloProvider client={client}>\n      <Router>\n        <Switch>\n          <PrivateRoute path=\"/home\">\n            <Home />\n          </PrivateRoute>\n          <PublicRoute path=\"/signin\">\n            <Signin />\n          </PublicRoute>\n          <PublicRoute path=\"/signup\">\n            <Signup />\n          </PublicRoute>\n          <Route path=\"*\">\n            <Redirect to=\"/signin\" />\n          </Route>\n        </Switch>\n      </Router>\n    </ApolloProvider>\n  ) : (\n    <div>Loading...</div>\n  );\n}\n","import { ApolloClient, HttpLink, InMemoryCache } from \"@apollo/client\";\nimport { GRAPHQL_URL } from \"../Constants\";\n\nexport const createApolloClient = (authToken: string) => {\n  return new ApolloClient({\n    link: new HttpLink({\n      uri: GRAPHQL_URL,\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n      },\n    }),\n    cache: new InMemoryCache(),\n  });\n};\n","import \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport Modal from \"./components/Modal\";\nimport AppRouter from \"./router/AppRouter\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <>\n        <Modal />\n        <AppRouter />\n      </>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}