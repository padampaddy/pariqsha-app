{"version":3,"sources":["redux/slices/modal-slice.ts","Constants.ts","api/user-api.ts","redux/slices/user-slice.ts","redux/store.ts","components/Modal.tsx","assets/images/pariqsha.png","layouts/General.tsx","pages/Signin.tsx","pages/Signup.tsx","router/PrivateRoute.tsx","api/queries.ts","components/PriceTag.tsx","components/Card.tsx","components/Switch.tsx","components/Menu.tsx","layouts/Base.tsx","pages/components/UnregisterBody.tsx","pages/Home.tsx","router/PublicRoute.tsx","components/MarkdownView.tsx","pages/Details.tsx","router/AppRouter.tsx","api/apollo-client.ts","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["modalSlice","createSlice","name","initialState","visible","reducers","showModal","state","payload","hideModal","APPLICATION_ID","BASE_URL","LOGIN_URL","FORGOT_PASSWORD_URL","SIGNUP_URL","REFRESH_TOKEN_URL","RP_KEY_ID_TEST","login","email","password","fetch","method","headers","body","JSON","stringify","loginId","applicationId","signup","data","Authorization","refreshToken","a","entities","localStorage","getItem","Promise","reject","parse","token","res","json","loginAction","createAsyncThunk","response","signupAction","saveEntities","setItem","getEntities","userSlice","loading","saveToken","logout","undefined","clear","extraReducers","builder","addCase","pending","fulfilled","rejected","store","configureStore","reducer","user","modal","Modal","useSelector","title","dispatch","useDispatch","className","aria-labelledby","role","aria-modal","onClick","actions","aria-hidden","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","id","GeneralLayout","children","useState","window","innerHeight","height","setHeight","innerWidth","width","setWidth","useEffect","addEventListener","style","ForgotPasswordBody","setEmail","htmlFor","onChange","e","target","value","inputMode","type","placeholder","forgotPassword","Signin","setPassword","General","src","logo","alt","to","onSubmit","preventDefault","autoFocus","autoComplete","Signup","cPassword","setCPassword","registration","PrivateRoute","rest","render","location","pathname","from","GET_TODAY_QUIZZES","gql","GET_QUIZ_DETAILS","GET_REGISTRATION_QUIZ","GET_MY_QUIZZES","REGISTER_QUIZ","UNREGISTER_QUIZ","ADD_RP_PAYLOAD","MAKE_REFUND_REQUEST","PriceTag","price","String","fromCharCode","Card","decorate","subTitle","content","imgSrc","coverImgSrc","footer","date","time","duration","zoom","Switch","active","onToggle","inactiveLabel","activeLabel","Menu","onClose","BaseLayout","actionButtons","showBack","isOpen","setIsOpen","history","useHistory","zIndex","goBack","flatMap","button","index","icon","UnregisterBody","onConfirm","today","Date","toISOString","Home","useQuery","variables","myQuizzes","refetch","createOrder","useFetch","cache","post","showMyQuizzes","setShowMyQuizzes","useMutation","registerQuiz","unRegisterQuiz","addRPPayload","makeRefundRequest","getCards","useCallback","quizData","quiz_quiz","filter","quiz","quiz_registration","findIndex","q","quizByQuiz","image","whiteSpace","short_description","moment","start_at","format","cover","diff","end_at","humanize","topics","split","join","all","userId","quizId","catch","console","error","then","options","key","amount","currency","description","order_id","handler","orderId","receipt","Razorpay","open","push","Base","username","PublicRoute","MarkdownView","md","remarkPlugins","gfm","Details","useParams","refetchRegistration","quiz_quiz_by_pk","length","MySwitch","useLocation","path","AppRouter","client","setClient","setOptions","httpLink","HttpLink","uri","errorLink","onError","graphQLErrors","operation","forward","err","log","extensions","code","fromPromise","oldHeaders","getContext","setContext","authorization","wsTransport","SubscriptionClient","reconnect","connectionParams","wsLink","WebSocketLink","splitLink","query","definition","getMainDefinition","kind","ApolloClient","link","InMemoryCache","createApolloClient","ApolloProvider","url","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2594a2b5.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Modal } from \"../../types/Modal\";\n\nconst modalSlice = createSlice({\n  name: \"modal\",\n  initialState: {\n    visible: false,\n  } as Modal,\n  reducers: {\n    showModal: (state, { payload }: PayloadAction<Omit<Modal, \"visible\">>) => {\n      return { ...state, ...payload, visible: true };\n    },\n    hideModal: (state) => {\n      state.visible = false;\n    },\n  },\n});\n\nexport default modalSlice;\n","export const APPLICATION_ID = \"c38e1adf-afad-45f4-9017-a803290f3281\";\n\nexport const BASE_URL = `https://auth.app.pariqsha.com`;\nexport const GRAPHQL_URL = `https://hasura.app.pariqsha.com/v1/graphql`;\nexport const GRAPHQL_URL_WS = `wss://hasura.app.pariqsha.com/v1/graphql`;\nexport const LOGIN_URL = `${BASE_URL}/api/login`;\nexport const FORGOT_PASSWORD_URL = `${BASE_URL}/api/user/forgot-password`;\nexport const SIGNUP_URL = `${BASE_URL}/api/user/registration/`;\nexport const REFRESH_TOKEN_URL = `${BASE_URL}/api/jwt/refresh`;\nexport const FUNCTIONS_URL = `https://functions.app.pariqsha.com/`;\nexport const FUNCTIONS_URL_TEST = `http://192.168.1.9:3000/`;\n\nexport const RP_KEY_ID_TEST=`rzp_test_AjijXUrhJvEYtP`;\n// export const RP_KEY_ID=`rzp_test_AjijXUrhJvEYtP`;","import {\n  APPLICATION_ID,\n  FORGOT_PASSWORD_URL,\n  LOGIN_URL,\n  REFRESH_TOKEN_URL,\n  SIGNUP_URL,\n} from \"../Constants\";\nimport { SignupRequest } from \"../types/User\";\n\nexport const login = ({\n  email,\n  password,\n}: {\n  email: string;\n  password: string;\n}) => {\n  return fetch(LOGIN_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      loginId: email,\n      password,\n      applicationId: APPLICATION_ID,\n    }),\n  });\n};\n\nexport const signup = (data: SignupRequest) => {\n  return fetch(SIGNUP_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: \"seKKkbWSPZ2qtGWP6a2MWG-3WewgcdZeAZlBmInLexgTKFZPouYtZG6u\",\n    },\n    body: JSON.stringify(data),\n  });\n};\n\nexport const refreshToken = async () => {\n  const entities = localStorage.getItem(\"entities\");\n  if (!entities) {\n    return Promise.reject();\n  }\n  const { token, refreshToken } = JSON.parse(entities);\n  const res = await fetch(REFRESH_TOKEN_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      token,\n      refreshToken,\n    }),\n  });\n  const data = await res.json();\n  return data.token;\n};\n\nexport const forgotPassword = (email: string) => {\n  return fetch(FORGOT_PASSWORD_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify({ loginId: email }),\n  });\n};\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { login, signup } from \"../../api/user-api\";\nimport {\n  SignupRequest,\n  SignupSigninResponse,\n  UserState,\n} from \"../../types/User\";\n\nexport const loginAction = createAsyncThunk(\n  \"users/login\",\n  async ({ email, password }: { email: string; password: string }) => {\n    const response = await login({\n      email,\n      password,\n    });\n    return (await response.json()) as SignupSigninResponse;\n  }\n);\n\nexport const signupAction = createAsyncThunk(\n  \"users/signup\",\n  async (data: SignupRequest) => {\n    const response = await signup(data);\n    return (await response.json()) as SignupSigninResponse;\n  }\n);\n\nexport function saveEntities(entities: SignupSigninResponse) {\n  localStorage.setItem(\"entities\", JSON.stringify(entities));\n}\n\nexport function getEntities(): SignupSigninResponse | undefined {\n  const entities = localStorage.getItem(\"entities\");\n  if (entities) {\n    return JSON.parse(entities) as SignupSigninResponse;\n  } else {\n    return undefined;\n  }\n}\n\nconst userSlice = createSlice<\n  UserState,\n  {\n    saveToken: (state: UserState, { payload }: PayloadAction<string>) => void;\n    logout: (state: UserState) => void;\n  },\n  \"user\"\n>({\n  name: \"user\",\n  initialState: { entities: getEntities(), loading: \"idle\" },\n  reducers: {\n    saveToken: (state: UserState, { payload }: PayloadAction<string>) => {\n      state.entities!.token = payload;\n      saveEntities(state.entities!);\n    },\n    logout: (state: UserState) => {\n      state.entities = undefined;\n      state.loading = \"idle\";\n      localStorage.clear();\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loginAction.pending, (state) => {\n      state.loading = \"pending\";\n    });\n    builder.addCase(\n      loginAction.fulfilled,\n      (state, { payload }: PayloadAction<SignupSigninResponse>) => {\n        state.loading = \"succeeded\";\n        saveEntities(payload);\n        state.entities = payload;\n      }\n    );\n    builder.addCase(loginAction.rejected, (state) => {\n      state.loading = \"failed\";\n    });\n    builder.addCase(signupAction.pending, (state) => {\n      state.loading = \"pending\";\n    });\n    builder.addCase(\n      signupAction.fulfilled,\n      (state, { payload }: PayloadAction<SignupSigninResponse>) => {\n        state.loading = \"succeeded\";\n        saveEntities(payload);\n        state.entities = payload;\n      }\n    );\n    builder.addCase(signupAction.rejected, (state) => {\n      state.loading = \"failed\";\n    });\n  },\n});\n\nexport default userSlice;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport modalSlice from \"./slices/modal-slice\";\nimport userSlice from \"./slices/user-slice\";\n\nconst store = configureStore({\n  reducer: {\n    user: userSlice.reducer,\n    modal: modalSlice.reducer,\n  },\n});\nexport type RootState = ReturnType<typeof store.getState>;\nexport default store;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport modalSlice from \"../redux/slices/modal-slice\";\nimport { RootState } from \"../redux/store\";\n\nconst Modal = () => {\n  const { title, visible, body } = useSelector(\n    (state: RootState) => state.modal\n  );\n  const dispatch = useDispatch();\n  if (!visible) return null;\n  return (\n    <div\n      className=\"fixed z-10 inset-0 overflow-y-auto\"\n      aria-labelledby=\"modal-title\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n    >\n      <div className=\"flex items-start justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div\n          onClick={() => dispatch(modalSlice.actions.hideModal())}\n          className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n          aria-hidden=\"true\"\n        ></div>\n\n        <span\n          className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n          aria-hidden=\"true\"\n        >\n          &#8203;\n        </span>\n\n        <div className=\"inline-block align-center bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 w-full max-w-2xl\">\n          <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n            <div className=\"sm:flex sm:items-start\">\n              <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\n                <svg\n                  className=\"h-6 w-6 text-red-600\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  aria-hidden=\"true\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n                  />\n                </svg>\n              </div>\n              <div className=\"mt-3 text-center flex-grow sm:mt-0 sm:ml-4 sm:text-left\">\n                <h3\n                  className=\"text-lg leading-6 font-medium text-gray-900\"\n                  id=\"modal-title\"\n                >\n                  {title}\n                </h3>\n                {body}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/pariqsha.8035258e.png\";","import { PropsWithChildren, useEffect, useState } from \"react\";\n\ninterface Props {}\n\nfunction GeneralLayout({ children }: PropsWithChildren<Props>) {\n  const [height, setHeight] = useState(window.innerHeight);\n  const [width, setWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setHeight(window.innerHeight);\n      setWidth(window.innerWidth);\n    });\n  }, []);\n  return (\n    <div style={{ width: width, height: height }} className=\"flex overflow-hidden flex-col flex-1\">\n      <div className=\"w-full flex-grow bg-gradient-to-tl overflow-y-auto pb-8 from-red-100 to-blue-100\">\n        {children}\n      </div>\n      <div className=\"text-center bg-white bg-opacity-50 shadow-sm text-gray-400 p-4 w-screen\">\n        &copy; Pariqsha, 2021. All rights reserved.\n      </div>\n    </div>\n  );\n}\n\nexport default GeneralLayout;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { forgotPassword } from \"../api/user-api\";\nimport logo from \"../assets/images/pariqsha.png\";\nimport GeneralLayout from \"../layouts/General\";\nimport modalSlice from \"../redux/slices/modal-slice\";\nimport { loginAction } from \"../redux/slices/user-slice\";\nimport { RootState } from \"../redux/store\";\n\nconst ForgotPasswordBody = () => {\n  const [email, setEmail] = useState(\"\");\n  return (\n    <>\n      <div className=\"mt-2 text-left text-sm text-gray-500\">\n        <form>\n          <div className=\"mb-4\">\n            <label\n              className=\"block mb-2 text-sm font-bold text-gray-700\"\n              htmlFor=\"email\"\n            >\n              Email\n            </label>\n            <input\n              className=\"w-full p-3 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n              id=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              inputMode=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email Address...\"\n            />\n          </div>\n        </form>\n      </div>\n      <div className=\"bg-gray-50 flex justify-end py-3 sm:px-6\">\n        <button\n          className=\"w-50 px-4 bg-blue-600 py-2 text-white rounded hover:bg-blue-700 focus:outline-none focus:shadow-outline\"\n          type=\"button\"\n          onClick={() => {\n            forgotPassword(email);\n          }}\n        >\n          Reset Password\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default function Signin() {\n  const { loading } = useSelector((state: RootState) => state.user);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  return (\n    <GeneralLayout>\n      <div className=\"max-w-md pt-8 mx-auto\">\n        <img src={logo} className=\"h-20 w-20 mx-auto\" alt=\"pariqsha logo\" />\n        <h1 className=\"text-md font-bold mt-4 text-center\">\n          Hi, Welcome to Pariqsha\n        </h1>\n        <div className=\"flex shadow bg-white mt-4 p-8 rounded m-auto text-center flex-col align-middle justify-center\">\n          <p className=\"my-4 text-gray-500\">\n            New here?\n            <Link\n              className=\"text-blue-400 hover:text-blue-600 ml-1\"\n              to=\"/signup\"\n            >\n              Sign up now...\n            </Link>\n          </p>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              dispatch(loginAction({ email, password }));\n            }}\n          >\n            <fieldset className=\"flex my-3 rounded flex-col max-w-lg mx-auto\">\n              <label className=\"text-left text-xs text-gray-500\" htmlFor=\"\">\n                Email\n              </label>\n              <input\n                autoFocus\n                type=\"text\"\n                className=\"input\"\n                onChange={(e) => setEmail(e.target.value)}\n                autoComplete=\"new-password\"\n                placeholder=\"john@doe.com\"\n              />\n              <label className=\"text-left text-xs text-gray-500\" htmlFor=\"\">\n                Password\n              </label>\n              <input\n                type=\"password\"\n                className=\"input\"\n                onChange={(e) => setPassword(e.target.value)}\n                autoComplete=\"new-password\"\n                placeholder=\"*******\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => {\n                  dispatch(\n                    modalSlice.actions.showModal({\n                      title: \"Forgot Password\",\n                      body: <ForgotPasswordBody />,\n                    })\n                  );\n                }}\n                className=\"text-blue-300 text-sm hover:text-blue-500 focus:outline-none mb-3 self-end\"\n              >\n                Forgot Your Password? Click here...\n              </button>\n              <button className=\"button mt-3 self-end\">\n                {loading === \"pending\"\n                  ? \"Logging In...\"\n                  : loading === \"succeeded\"\n                  ? \"Login Successful\"\n                  : \"Login\"}\n              </button>\n            </fieldset>\n          </form>\n        </div>\n      </div>\n    </GeneralLayout>\n  );\n}\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../assets/images/pariqsha.png\";\nimport { APPLICATION_ID } from \"../Constants\";\nimport GeneralLayout from \"../layouts/General\";\nimport { signupAction } from \"../redux/slices/user-slice\";\nimport { RootState } from \"../redux/store\";\n\nexport default function Signup() {\n  const { loading } = useSelector((state: RootState) => state.user);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [cPassword, setCPassword] = useState(\"\");\n  const dispatch = useDispatch();\n\n  return (\n    <GeneralLayout>\n      <div className=\"max-w-md pt-8 mx-auto\">\n        <img src={logo} className=\"h-20 w-20 mx-auto\" alt=\"pariqsha logo\" />\n        <h1 className=\"text-md font-bold mt-4 text-center\">\n          Hi, Welcome to Pariqsha\n        </h1>\n        <div className=\"flex shadow bg-white mt-4 p-8 rounded m-auto text-center flex-col align-middle justify-center\">\n          <p className=\"my-4 text-gray-500\">\n            Already registered?\n            <Link\n              className=\"text-blue-400 hover:text-blue-600 ml-1\"\n              to=\"/signin\"\n            >\n              Sign in here...\n            </Link>\n          </p>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              if (cPassword !== password) {\n                return;\n              }\n              dispatch(\n                signupAction({\n                  registration: {\n                    applicationId: APPLICATION_ID,\n                  },\n                  user: {\n                    email,\n                    password,\n                  },\n                })\n              );\n            }}\n          >\n            <fieldset className=\"flex my-3 rounded flex-col max-w-lg mx-auto\">\n              <label className=\"text-left text-xs text-gray-500\" htmlFor=\"\">\n                Email\n              </label>\n              <input\n                autoFocus\n                type=\"text\"\n                className=\"input\"\n                onChange={(e) => setEmail(e.target.value)}\n                autoComplete=\"new-password\"\n                placeholder=\"john@doe.com\"\n              />\n              <label className=\"text-left text-xs text-gray-500\" htmlFor=\"\">\n                Enter a Password\n              </label>\n              <input\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n                className=\"input\"\n                autoComplete=\"new-password\"\n                placeholder=\"*******\"\n              />\n              <label className=\"text-left text-xs text-gray-500\" htmlFor=\"\">\n                Confirm your Password\n              </label>\n              <input\n                type=\"password\"\n                onChange={(e) => setCPassword(e.target.value)}\n                className=\"input\"\n                autoComplete=\"new-password\"\n                placeholder=\"*******\"\n              />\n              <label className=\"inline-flex items-center\">\n                <input type=\"checkbox\" />\n                <span className=\"ml-2 text-gray-600\">\n                  I agree to terms &amp; conditions\n                </span>\n              </label>\n              <button className=\"button mt-3 self-end\">\n                {\" \"}\n                {loading === \"pending\"\n                  ? \"Signing up...\"\n                  : loading === \"succeeded\"\n                  ? \"Signed up Successful\"\n                  : \"Signup\"}\n              </button>\n            </fieldset>\n          </form>\n        </div>\n      </div>\n    </GeneralLayout>\n  );\n}\n","import { PropsWithChildren } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\nconst PrivateRoute = ({ children, ...rest }: PropsWithChildren<RouteProps>) => {\n  const entities = useSelector((state: RootState) => state.user.entities);\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        entities?.user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/signin\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_TODAY_QUIZZES = gql`\n  query get_today_quizzes($date: timestamptz!) {\n    quiz_quiz(where: { end_at: { _gte: $date } }) {\n      cover\n      created_at\n      description\n      short_description\n      end_at\n      id\n      image\n      start_at\n      title\n      topics\n      price\n    }\n  }\n`;\n\nexport const GET_QUIZ_DETAILS = gql`\n  query get_quiz_by_pk($id: uuid!) {\n    quiz_quiz_by_pk(id: $id) {\n      cover\n      created_at\n      description\n      short_description\n      end_at\n      id\n      image\n      start_at\n      title\n      topics\n      price\n    }\n  }\n`;\n\nexport const GET_REGISTRATION_QUIZ = gql`\n  query get_registration_quiz($quizId: uuid!, $userId: uuid!) {\n    quiz_registration(\n      where: { quiz: { _eq: $quizId }, user_id: { _eq: $userId } }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const GET_MY_QUIZZES = gql`\n  query get_my_quizzes($user: uuid!) {\n    quiz_registration(where: { user_id: { _eq: $user } }) {\n      quizByQuiz {\n        cover\n        created_at\n        description\n        end_at\n        short_description\n        id\n        image\n        start_at\n        title\n        topics\n      }\n    }\n  }\n`;\n\nexport const REGISTER_QUIZ = gql`\n  mutation registerQuiz($quizId: uuid!, $userId: uuid!) {\n    insert_quiz_registration_one(object: { quiz: $quizId, user_id: $userId }) {\n      quiz\n      user_id\n    }\n  }\n`;\n\nexport const UNREGISTER_QUIZ = gql`\n  mutation unregisterQuiz($userId: uuid!, $quizId: uuid!) {\n    delete_quiz_registration(\n      where: { user_id: { _eq: $userId }, quiz: { _eq: $quizId } }\n    ) {\n      affected_rows\n      returning {\n        id\n      }\n    }\n  }\n`;\n\nexport const ADD_RP_PAYLOAD = gql`\n  mutation addRPPayload($orderId: uuid!, $payload: String!) {\n    update_quiz_orders_by_pk(\n      pk_columns: { id: $orderId }\n      _set: { payload: $payload }\n    ) {\n      quiz\n    }\n  }\n`;\n\nexport const MAKE_REFUND_REQUEST = gql`\n  mutation makeRefundRequest($quizId: uuid!) {\n    insert_quiz_refund_request_one(object: { quiz_id: $quizId }) {\n      quiz_id\n    }\n  }\n`;\n","import { ReactElement } from 'react'\n\ninterface Props {\n  price?: number\n}\n\nexport default function PriceTag({ price }: Props): ReactElement {\n  return (\n    <div\n      className=\"inline-flex items-center justify-center w-32 py-2 absolute top-2 \n      text-lg -left-8 bg-pink-600 font-bold transform -rotate-45 text-gray-200 bg-opacity-80\"\n    >\n      {!!price && price !== 0\n        ? String.fromCharCode(0x20b9) + price + '/-'\n        : `Free`}\n    </div>\n  )\n}\n","import { ReactElement } from 'react'\nimport PriceTag from './PriceTag'\n\ninterface Props {\n  title?: string\n  subTitle?: string\n  content?: ReactElement\n  imgSrc?: string\n  coverImgSrc?: string\n  footer?: ReactElement\n  date?: string\n  time?: string\n  duration?: string\n  price?: number\n  decorate?: boolean\n}\n\nexport default function Card({\n  title,\n  decorate = false,\n  subTitle,\n  content,\n  imgSrc,\n  coverImgSrc,\n  footer,\n  date,\n  price,\n  time,\n  duration,\n}: Props): ReactElement {\n  return (\n    <div\n      className={`w-full text-sm ${\n        decorate ? 'max-w-md' : 'max-w-6xl'\n      } bg-white flex flex-col overflow-hidden  tracking-wide ${\n        decorate ? 'shadow-lg border-gray-300  rounded-md border-2' : ''\n      }`}\n      style={{\n        zoom: decorate ? 0.85 : 1,\n      }}\n    >\n      {coverImgSrc && (\n        <div className=\"relative\">\n          {date && (\n            <div className=\"absolute top-0 bottom-0 my-auto w-full flex flex-col justify-center items-end bg-opacity-20 bg-black right-0 text-gray-200 text-2xl font-bold\">\n              <span className=\"bg-blue-700 py-4 px-8 bg-opacity-80 rounded-l-md\">\n                {date}\n              </span>\n              <span className=\"bg-blue-700 py-2 mt-2 text-sm px-8 bg-opacity-70  rounded-l-md\">\n                starts {time}\n              </span>\n            </div>\n          )}\n          <img\n            className=\"w-full h-48 object-cover object-center\"\n            src={coverImgSrc}\n            alt=\"cover\"\n          />\n          <PriceTag price={price} />\n        </div>\n      )}\n      <div className=\"p-6 flex-grow\">\n        <div id=\"header\" className=\"flex items-center mb-4\">\n          {imgSrc && (\n            <img\n              alt=\"avatar\"\n              className=\"w-16 h-16 rounded-full border-2 object-cover border-gray-300\"\n              src={imgSrc}\n            />\n          )}{' '}\n          <div id=\"header-text\" className=\"leading-5 w-full relative ml-6 sm\">\n            <h4 id=\"name\" className=\"text-xl font-semibold\">\n              {title}\n              <span className=\"text-sm ml-4 text-gray-600\">({duration})</span>\n            </h4>\n\n            <h5 id=\"job\" className=\"font-semibold text-blue-600\">\n              {subTitle}\n            </h5>\n            {footer && !decorate &&  (\n              <div className=\"hidden absolute top-0 right-0 py-3 max-w-lg md:flex\">\n                {footer}\n              </div>\n            )}\n          </div>\n        </div>\n        <div>{content}</div>\n      </div>\n      {footer && (\n        <div className=\"border-t-2 flex flex-row px-6 py-3 justify-between items-center\">\n          {footer}\n        </div>\n      )}\n    </div>\n  )\n}\n","import { ReactElement } from 'react'\n\ninterface Props {\n  active?: boolean\n  onToggle: () => void\n  inactiveLabel?: string\n  activeLabel?: string\n}\n\nexport default function Switch({\n  active = false,\n  onToggle,\n  inactiveLabel,\n  activeLabel,\n}: Props): ReactElement {\n  return (\n    <div className=\"flex justify-center items-center\">\n      <span className={`text-sm  font-semibold ${active?'text-gray-400':'text-gray-500'}`}>{inactiveLabel}</span>\n      <div\n        className={`w-14 h-7 flex items-center  rounded-full mx-3 px-1 ${\n          active ? 'bg-blue-500' : 'bg-gray-300'\n        }`}\n        onClick={() => onToggle()}\n      >\n        <div\n          className={`bg-white w-5 h-5 rounded-full shadow-md transition transform ${\n            active ? 'translate-x-7' : ''\n          }`}\n        ></div>\n      </div>\n      <span className={`text-sm  font-semibold ${active?'text-gray-500':'text-gray-400'}`}>{activeLabel}</span>\n    </div>\n  )\n}\n","import { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport userSlice from \"../redux/slices/user-slice\";\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst Menu = ({ onClose }: Props) => {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"w-screen z-50 h-full flex flex-row\">\n      <div className=\"flex flex-col bg-white w-screen overflow-hidden\">\n        <div className=\"flex items-center justify-start text-3xl py-2 px-4\">\n          <button\n            onClick={() => {\n              onClose();\n            }}\n            className=\"focus:outline-none lg:hidden\"\n          >\n            &times;\n          </button>\n        </div>\n        <ul className=\"flex flex-col py-4\">\n          <li>\n            <Link\n              className=\"flex flex-row items-center h-12 transform hover:translate-x-2 transition-transform ease-in duration-200 text-gray-500 hover:text-gray-800\"\n              to=\"/home\"\n              onClick={() => onClose()}\n            >\n              <span className=\"inline-flex items-center justify-center h-12 w-12\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"text-gray-400 h-5 w-5 fill-current\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M21.743,12.331l-9-10c-0.379-0.422-1.107-0.422-1.486,0l-9,10c-0.265,0.293-0.331,0.715-0.17,1.076 C2.247,13.768,2.605,14,3,14h2v7c0,0.552,0.447,1,1,1h3c0.553,0,1-0.448,1-1v-4h4v4c0,0.552,0.447,1,1,1h3c0.553,0,1-0.448,1-1v-7h2 c0.395,0,0.753-0.232,0.913-0.593C22.074,13.046,22.008,12.625,21.743,12.331z\"></path>\n                </svg>\n              </span>\n              <span className=\"text-sm font-medium\">Home</span>\n            </Link>\n          </li>\n          <li>\n            <Link\n              className=\"flex flex-row items-center h-12 transform hover:translate-x-2 transition-transform ease-in duration-200 text-gray-500 hover:text-gray-800\"\n              to=\"/signin\"\n              onClick={() => {\n                dispatch(userSlice.actions.logout());\n                onClose();\n              }}\n            >\n              <span className=\"inline-flex items-center justify-center h-12 w-12\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5 fill-current text-gray-400\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M16 13L16 11 7 11 7 8 2 12 7 16 7 13z\"></path>\n                  <path d=\"M20,3h-9C9.897,3,9,3.897,9,5v4h2V5h9v14h-9v-4H9v4c0,1.103,0.897,2,2,2h9c1.103,0,2-0.897,2-2V5C22,3.897,21.103,3,20,3z\"></path>\n                </svg>{\" \"}\n              </span>\n              <span className=\"text-sm font-medium\">Logout</span>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","import { PropsWithChildren, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Menu from '../components/Menu'\n\ninterface ActionButton {\n  icon: JSX.Element\n  onClick: () => void\n}\n\ninterface Props {\n  title?: string\n  actionButtons?: ActionButton[]\n  showBack?: boolean\n}\n\nfunction BaseLayout({\n  children,\n  title = 'Pariqsha',\n  actionButtons = [],\n  showBack = false,\n}: PropsWithChildren<Props>) {\n  const [height, setHeight] = useState(window.innerHeight)\n  const [width, setWidth] = useState(window.innerWidth)\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const history = useHistory()\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      setHeight(window.innerHeight)\n      setWidth(window.innerWidth)\n    })\n  }, [])\n  return (\n    <div\n      style={{ width: width, height: height }}\n      className=\"flex overflow-hidden flex-col flex-1\"\n    >\n      <div\n        className={`fixed overflow-hidden  transition-width duration-500 top-0 left-0 ${\n          isOpen ? 'w-80' : 'w-0 lg:w-80'\n        }`}\n        style={{ height: height, zIndex: showBack ? -1 : 1000 }}\n      >\n        {!showBack && (\n          <Menu\n            onClose={() => {\n              setIsOpen(false)\n            }}\n          />\n        )}\n      </div>\n      <div className=\"shadow-sm items-center flex flex-row gap-4 p-4 w-screen relative\">\n        {showBack ? (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"w-6 cursor-pointer absolute left-4 top-0 bottom-0 my-auto\"\n            viewBox=\"0 0 512 512\"\n            onClick={() => history.goBack()}\n          >\n            <title>Arrow Back</title>\n            <path\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"48\"\n              d=\"M244 400L100 256l144-144M120 256h292\"\n            />\n          </svg>\n        ) : (\n          <svg\n            onClick={() => {\n              setIsOpen(true)\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 cursor-pointer absolute left-4 top-0 bottom-0 my-auto  lg:hidden\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M4 6H20V8H4zM4 11H20V13H4zM4 16H20V18H4z\"></path>\n          </svg>\n        )}\n        <h4 className=\"text-lg flex-grow font-semibold flex-1 text-center\">\n          {title}\n        </h4>\n        <div className=\"absolute right-4 top-0 bottom-0 my-auto items-center flex\">\n          {actionButtons.flatMap((button, index) => (\n            <div key={index} onClick={button.onClick}>\n              {button.icon}\n            </div>\n          ))}\n        </div>\n      </div>\n      <div\n        className={`w-full ${\n          showBack ? '' : 'lg:pl-96'\n        } flex-grow bg-gradient-to-tl overflow-y-auto pb-8 from-red-100 to-blue-100`}\n      >\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default BaseLayout\n","import { ReactElement } from 'react'\nimport { useDispatch } from 'react-redux'\nimport modalSlice from '../../redux/slices/modal-slice'\n\ninterface Props {\n  onConfirm: () => void\n}\n\nexport default function UnregisterBody({ onConfirm }: Props): ReactElement {\n  const dispatch = useDispatch()\n  return (\n    <>\n      <div className=\"my-2\">Are you sure you want to unregister?</div>\n      <div className=\"text-gray-400 font-semibold text-sm\">\n        If you have paid for the quiz, your refund request will be raised\n        automatically. Please contact us using the contact us form for details.\n      </div>\n      <div className=\"flex mt-4 items-center justify-center \">\n        <button\n          className=\"text-red-500 button-link px-12\"\n          onClick={() => onConfirm()}\n        >\n          Yes\n        </button>\n        <button\n          onClick={() => dispatch(modalSlice.actions.hideModal())}\n          className=\"button bg-gray-100 text-gray-600\"\n        >\n          No\n        </button>\n      </div>\n    </>\n  )\n}\n","import { useMutation, useQuery } from '@apollo/client'\nimport moment from 'moment'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport useFetch from 'use-http'\nimport {\n  ADD_RP_PAYLOAD,\n  GET_MY_QUIZZES,\n  GET_TODAY_QUIZZES,\n  MAKE_REFUND_REQUEST,\n  REGISTER_QUIZ,\n  UNREGISTER_QUIZ,\n} from '../api/queries'\nimport Card from '../components/Card'\nimport Switch from '../components/Switch'\nimport { RP_KEY_ID_TEST } from '../Constants'\nimport BaseLayout from '../layouts/Base'\nimport modalSlice from '../redux/slices/modal-slice'\nimport { RootState } from '../redux/store'\nimport { MyQuizResponse, QuizResponse } from '../types/Quiz'\nimport UnregisterBody from './components/UnregisterBody'\n\nconst today = new Date().toISOString()\n\ndeclare var Razorpay: any\n\nexport default function Home() {\n  const user = useSelector((state: RootState) => state.user.entities?.user)\n  const { data } = useQuery<QuizResponse>(GET_TODAY_QUIZZES, {\n    variables: {\n      date: today,\n    },\n  })\n  const { data: myQuizzes, refetch } = useQuery<MyQuizResponse>(\n    GET_MY_QUIZZES,\n    {\n      variables: {\n        user: user?.id,\n      },\n    },\n  )\n  const { post: createOrder } = useFetch(`orders`, {\n    cache: 'no-cache',\n  })\n\n  const [showMyQuizzes, setShowMyQuizzes] = useState<boolean>(false)\n  const [registerQuiz] = useMutation(REGISTER_QUIZ)\n  const [unRegisterQuiz] = useMutation(UNREGISTER_QUIZ)\n  const [addRPPayload] = useMutation(ADD_RP_PAYLOAD)\n  const [makeRefundRequest] = useMutation(MAKE_REFUND_REQUEST)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  useEffect(() => {\n    refetch({\n      user: user?.id,\n    })\n  }, [refetch, user?.id])\n\n  const getCards = useCallback(() => {\n    let quizData = data?.quiz_quiz\n    if (!quizData) return <div />\n    if (showMyQuizzes)\n      quizData = quizData.filter(\n        (quiz) =>\n          myQuizzes?.quiz_registration.findIndex(\n            (q) => q.quizByQuiz.id === quiz.id,\n          ) !== -1,\n      )\n    return quizData.flatMap((quiz, index) => (\n      <Card\n        decorate\n        key={index}\n        title={quiz.title}\n        imgSrc={quiz.image}\n        content={\n          <div style={{ whiteSpace: 'pre-wrap' }}>{quiz.short_description}</div>\n        }\n        price={quiz.price}\n        date={moment(quiz.start_at).format('Do MMM')}\n        coverImgSrc={quiz.cover}\n        time={moment(quiz.start_at).format('h:mm A')}\n        duration={moment\n          .duration(moment(quiz.start_at).diff(moment(quiz.end_at)))\n          .humanize()}\n        subTitle={quiz.topics.split(',').join(', ')}\n        footer={\n          <>\n            {myQuizzes?.quiz_registration.findIndex(\n              (q) => q.quizByQuiz.id === quiz.id,\n            ) === -1 ? (\n              <>\n                <button\n                  className=\"button\"\n                  onClick={async () => {\n                    if (quiz.price === 0) {\n                      Promise.all([\n                        registerQuiz({\n                          variables: {\n                            userId: user?.id,\n                            quizId: quiz.id,\n                          },\n                        }),\n                      ])\n                        .catch((e) => {\n                          console.error(e)\n                        })\n                        .then(() => {\n                          refetch({\n                            user: user?.id,\n                          })\n                        })\n                      return\n                    }\n                    const data = await createOrder({\n                      quizId: quiz.id,\n                    })\n                    var options = {\n                      key: RP_KEY_ID_TEST, // Enter the Key ID generated from the Dashboard\n                      amount: data.amount * 100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n                      currency: 'INR',\n                      name: 'Pariqsha',\n                      description: 'Test Transaction',\n                      image:\n                        'https://pariqsha.com/static/media/pariqsha.8035258e.png',\n                      order_id: data.id, //Pass the `id` obtained in the previous step\n                      handler: function (response: {\n                        razorpay_payment_id: string\n                        razorpay_order_id: string\n                        razorpay_signature: string\n                      }) {\n                        Promise.all([\n                          addRPPayload({\n                            variables: {\n                              orderId: data.receipt,\n                              payload: JSON.stringify(response),\n                            },\n                          }),\n                          registerQuiz({\n                            variables: {\n                              userId: user?.id,\n                              quizId: quiz.id,\n                            },\n                          }),\n                        ])\n                          .catch((e) => {\n                            console.error(e)\n                          })\n                          .then(() => {\n                            refetch({\n                              user: user?.id,\n                            })\n                          })\n                      },\n                    }\n                    var rzp1 = new Razorpay(options)\n                    rzp1.open()\n                  }}\n                >\n                  Register\n                </button>\n              </>\n            ) : (\n              <button\n                className=\"button-link text-red-500\"\n                onClick={() => {\n                  dispatch(\n                    modalSlice.actions.showModal({\n                      title: 'Are you sure?',\n                      body: (\n                        <UnregisterBody\n                          onConfirm={() => {\n                            Promise.all([\n                              makeRefundRequest({\n                                variables: {\n                                  quizId: quiz.id,\n                                },\n                              }),\n                              unRegisterQuiz({\n                                variables: {\n                                  userId: user?.id,\n                                  quizId: quiz.id,\n                                },\n                              }),\n                            ])\n                              .catch((e) => {\n                                console.error(e)\n                              })\n                              .then(() => {\n                                dispatch(modalSlice.actions.hideModal())\n                                refetch({\n                                  user: user?.id,\n                                })\n                              })\n                          }}\n                        />\n                      ),\n                    }),\n                  )\n                }}\n              >\n                Unregister\n              </button>\n            )}\n            <button\n              onClick={() => history.push(`details/${quiz.id}`)}\n              className=\"bg-gray-200 button-link\"\n            >\n              View Details\n            </button>\n          </>\n        }\n      />\n    ))\n  }, [\n    data?.quiz_quiz,\n    showMyQuizzes,\n    myQuizzes?.quiz_registration,\n    createOrder,\n    addRPPayload,\n    registerQuiz,\n    user?.id,\n    refetch,\n    dispatch,\n    makeRefundRequest,\n    unRegisterQuiz,\n    history,\n  ])\n  return (\n    <BaseLayout\n      actionButtons={[\n        {\n          icon: (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-5 w-5 fill-current text-gray-500\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M12 22c1.311 0 2.407-.834 2.818-2H9.182C9.593 21.166 10.689 22 12 22zM19 14.586V10c0-3.217-2.185-5.927-5.145-6.742C13.562 2.52 12.846 2 12 2s-1.562.52-1.855 1.258C7.185 4.074 5 6.783 5 10v4.586l-1.707 1.707C3.105 16.48 3 16.734 3 17v1c0 .553.447 1 1 1h16c.553 0 1-.447 1-1v-1c0-.266-.105-.52-.293-.707L19 14.586z\"></path>\n            </svg>\n          ),\n          onClick: () => {},\n        },\n        {\n          icon: (\n            <div className=\"capitalize ml-2 px-2 rounded-full bg-gray-400 text-white font-semibold\">\n              {user?.username?.[0]}\n            </div>\n          ),\n          onClick: () => {},\n        },\n      ]}\n    >\n      <div className=\"flex justify-end px-4 pt-4\" style={{ zoom: 0.8 }}>\n        <Switch\n          onToggle={() => setShowMyQuizzes((a) => !a)}\n          active={showMyQuizzes}\n          inactiveLabel=\"Discover\"\n          activeLabel=\"Upcoming\"\n        />\n      </div>\n      <div className=\"flex flex-col items-center p-4 gap-4\">\n        <h2 className=\"place-self-start text-3xl font-semibold\">\n          {showMyQuizzes ? `Upcoming Quizzes` : `Discover Quizzes`}\n        </h2>\n        <div className=\"flex flex-row flex-wrap gap-4 w-full\">{getCards()}</div>\n      </div>\n    </BaseLayout>\n  )\n}\n","import { PropsWithChildren } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\nimport { RootState } from \"../redux/store\";\n\nconst PublicRoute = ({ children, ...rest }: PropsWithChildren<RouteProps>) => {\n  const entities = useSelector((state: RootState) => state.user.entities);\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        entities?.user ? (\n          <Redirect\n            to={{\n              pathname: \"/home\",\n              state: { from: location },\n            }}\n          />\n        ) : (\n          children\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import { ReactElement } from 'react'\nimport gfm from 'remark-gfm'\nimport ReactMarkdown from 'react-markdown'\n\ninterface Props {\n  md?: string\n}\n\nexport default function MarkdownView({ md = '' }: Props): ReactElement {\n  return (\n    <div className=\"prose lg:prose-xl max-w-none\">\n      <ReactMarkdown remarkPlugins={[gfm]} children={md} />\n    </div>\n  )\n}\n","import { useMutation, useQuery } from '@apollo/client'\nimport moment from 'moment'\nimport { ReactElement, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport useFetch from 'use-http'\nimport {\n  ADD_RP_PAYLOAD,\n  GET_QUIZ_DETAILS,\n  GET_REGISTRATION_QUIZ,\n  MAKE_REFUND_REQUEST,\n  REGISTER_QUIZ,\n  UNREGISTER_QUIZ,\n} from '../api/queries'\nimport Card from '../components/Card'\nimport MarkdownView from '../components/MarkdownView'\nimport { RP_KEY_ID_TEST } from '../Constants'\nimport Base from '../layouts/Base'\nimport modalSlice from '../redux/slices/modal-slice'\nimport { RootState } from '../redux/store'\nimport { QuizDetailsResponse, QuizRegistrationResponse } from '../types/Quiz'\nimport UnregisterBody from './components/UnregisterBody'\n\ndeclare var Razorpay: any\n\nexport default function Details(): ReactElement {\n  const { id } = useParams<{ id: string }>()\n  const user = useSelector((state: RootState) => state.user.entities?.user)\n\n  const { data } = useQuery<QuizDetailsResponse>(GET_QUIZ_DETAILS, {\n    variables: {\n      id,\n    },\n  })\n  const { data: registration, refetch: refetchRegistration } = useQuery<\n    QuizRegistrationResponse\n  >(GET_REGISTRATION_QUIZ, {\n    variables: {\n      quizId: id,\n      userId: user?.id,\n    },\n  })\n  const { post: createOrder } = useFetch(`orders`, {\n    cache: 'no-cache',\n  })\n  useEffect(() => {\n    refetchRegistration({\n      quizId: id,\n      userId: user?.id,\n    })\n  }, [id, refetchRegistration, user?.id])\n  const [registerQuiz] = useMutation(REGISTER_QUIZ)\n  const [unRegisterQuiz] = useMutation(UNREGISTER_QUIZ)\n  const [addRPPayload] = useMutation(ADD_RP_PAYLOAD)\n  const [makeRefundRequest] = useMutation(MAKE_REFUND_REQUEST)\n  const dispatch = useDispatch()\n  return (\n    <Base title=\"Details\" showBack>\n      <div className=\"flex justify-center\">\n        <Card\n          title={data?.quiz_quiz_by_pk.title}\n          imgSrc={data?.quiz_quiz_by_pk.image}\n          content={<MarkdownView md={data?.quiz_quiz_by_pk.description} />}\n          price={data?.quiz_quiz_by_pk.price}\n          date={moment(data?.quiz_quiz_by_pk.start_at).format('Do MMM')}\n          coverImgSrc={data?.quiz_quiz_by_pk.cover}\n          time={moment(data?.quiz_quiz_by_pk.start_at).format('h:mm A')}\n          duration={moment\n            .duration(\n              moment(data?.quiz_quiz_by_pk.start_at).diff(\n                moment(data?.quiz_quiz_by_pk.end_at),\n              ),\n            )\n            .humanize()}\n          subTitle={data?.quiz_quiz_by_pk.topics.split(',').join(', ')}\n          footer={\n            registration?.quiz_registration.length === 0 ? (\n              <>\n                <button\n                  className=\"button\"\n                  onClick={async () => {\n                    if (data?.quiz_quiz_by_pk.price === 0) {\n                      Promise.all([\n                        registerQuiz({\n                          variables: {\n                            userId: user?.id,\n                            quizId: data?.quiz_quiz_by_pk.id,\n                          },\n                        }),\n                      ])\n                        .catch((e) => {\n                          console.error(e)\n                        })\n                        .then(() => {\n                          refetchRegistration({\n                            user: user?.id,\n                          })\n                        })\n                      return\n                    }\n                    const res = await createOrder({\n                      quizId: data?.quiz_quiz_by_pk.id,\n                    })\n                    var options = {\n                      key: RP_KEY_ID_TEST, // Enter the Key ID generated from the Dashboard\n                      amount: res.amount * 100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n                      currency: 'INR',\n                      name: 'Pariqsha',\n                      description: 'Test Transaction',\n                      image:\n                        'https://pariqsha.com/static/media/pariqsha.8035258e.png',\n                      order_id: res.id, //Pass the `id` obtained in the previous step\n                      handler: function (response: {\n                        razorpay_payment_id: string\n                        razorpay_order_id: string\n                        razorpay_signature: string\n                      }) {\n                        Promise.all([\n                          addRPPayload({\n                            variables: {\n                              orderId: res.receipt,\n                              payload: JSON.stringify(response),\n                            },\n                          }),\n                          registerQuiz({\n                            variables: {\n                              userId: user?.id,\n                              quizId: data?.quiz_quiz_by_pk.id,\n                            },\n                          }),\n                        ])\n                          .catch((e) => {\n                            console.error(e)\n                          })\n                          .then(() => {\n                            refetchRegistration({\n                              quizId: id,\n                              userId: user?.id,\n                            })\n                          })\n                      },\n                    }\n                    var rzp1 = new Razorpay(options)\n                    rzp1.open()\n                  }}\n                >\n                  Register\n                </button>\n              </>\n            ) : (\n              <button\n                className=\"button-link text-red-500\"\n                onClick={() => {\n                  dispatch(\n                    modalSlice.actions.showModal({\n                      title: 'Are you sure?',\n                      body: (\n                        <UnregisterBody\n                          onConfirm={() => {\n                            Promise.all([\n                              makeRefundRequest({\n                                variables: {\n                                  quizId: data?.quiz_quiz_by_pk.id,\n                                },\n                              }),\n                              unRegisterQuiz({\n                                variables: {\n                                  userId: user?.id,\n                                  quizId: data?.quiz_quiz_by_pk.id,\n                                },\n                              }),\n                            ])\n                              .catch((e) => {\n                                console.error(e)\n                              })\n                              .then(() => {\n                                dispatch(modalSlice.actions.hideModal())\n                                refetchRegistration({\n                                  quizId: id,\n                                  userId: user?.id,\n                                })\n                              })\n                          }}\n                        />\n                      ),\n                    }),\n                  )\n                }}\n              >\n                Unregister\n              </button>\n            )\n          }\n        />\n      </div>\n    </Base>\n  )\n}\n","import Signin from '../pages/Signin'\nimport Signup from '../pages/Signup'\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  useLocation,\n  Switch,\n} from 'react-router-dom'\nimport PrivateRoute from './PrivateRoute'\nimport Home from '../pages/Home'\nimport PublicRoute from './PublicRoute'\nimport { createApolloClient } from '../api/apollo-client'\nimport {\n  ApolloClient,\n  ApolloProvider,\n  NormalizedCacheObject,\n} from '@apollo/client'\nimport { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../redux/store'\nimport { IncomingOptions, Provider } from 'use-http'\nimport { FUNCTIONS_URL_TEST } from '../Constants'\nimport Details from '../pages/Details'\n\nfunction MySwitch() {\n  const location = useLocation()\n  return (\n    <Switch location={location}>\n      <PrivateRoute path=\"/home\">\n        <Home />\n      </PrivateRoute>\n      <PrivateRoute path=\"/details/:id\">\n        <Details />\n      </PrivateRoute>\n      <PublicRoute path=\"/signin\">\n        <Signin />\n      </PublicRoute>\n      <PublicRoute path=\"/signup\">\n        <Signup />\n      </PublicRoute>\n      <Route path=\"*\">\n        <Redirect to=\"/signin\" />\n      </Route>\n    </Switch>\n  )\n}\n\nexport default function AppRouter() {\n  const { entities } = useSelector((state: RootState) => state.user)\n  const [client, setClient] = useState<ApolloClient<NormalizedCacheObject>>()\n  const [options, setOptions] = useState<IncomingOptions | undefined>()\n  useEffect(() => {\n    setClient(createApolloClient())\n    setOptions({\n      headers: {\n        Authorization: `Bearer ${entities?.token}`,\n      },\n    })\n  }, [entities?.token])\n\n  if (!client) return <div>Loading</div>\n  return (\n    <ApolloProvider client={client}>\n      <Provider url={FUNCTIONS_URL_TEST} options={options}>\n        <Router>\n          <MySwitch />\n        </Router>\n      </Provider>\n    </ApolloProvider>\n  )\n}\n","import {\n  ApolloClient,\n  HttpLink,\n  InMemoryCache,\n  fromPromise,\n  from,\n  split,\n} from \"@apollo/client\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { GRAPHQL_URL, GRAPHQL_URL_WS } from \"../Constants\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { refreshToken } from \"./user-api\";\nimport userSlice, { getEntities } from \"../redux/slices/user-slice\";\nimport store from \"../redux/store\";\nimport { SubscriptionClient } from \"subscriptions-transport-ws\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\n\nexport const createApolloClient = () => {\n  const httpLink = new HttpLink({\n    uri: GRAPHQL_URL,\n    headers: {\n      Authorization: `Bearer ${getEntities()?.token}`,\n    },\n  });\n\n  const errorLink = onError(({ graphQLErrors, operation, forward }) => {\n    if (graphQLErrors) {\n      for (let err of graphQLErrors) {\n        console.log(err);\n        switch (err.extensions?.code) {\n          case \"invalid-jwt\":\n            return fromPromise(refreshToken()).flatMap((token) => {\n              if (token) {\n                store.dispatch(userSlice.actions.saveToken(token));\n                const oldHeaders = operation.getContext().headers;\n                // modify the operation context with a new token\n                operation.setContext({\n                  headers: {\n                    ...oldHeaders,\n                    authorization: `Bearer ${token}`,\n                  },\n                });\n                console.log(oldHeaders);\n                console.log(\"new headers\", {\n                  ...oldHeaders,\n                  authorization: `Bearer ${token}`,\n                });\n                // retry the request, returning the new observable\n              }\n              return forward(operation);\n            });\n        }\n      }\n    }\n    return forward(operation);\n  });\n\n  const wsTransport = new SubscriptionClient(GRAPHQL_URL_WS, {\n    reconnect: true,\n    connectionParams: {\n      headers: {\n        Authorization: `Bearer ${getEntities()?.token}`,\n      },\n    },\n  });\n  wsTransport.onError((err) => {\n    console.log(err);\n  });\n  const wsLink = new WebSocketLink(wsTransport);\n\n  const splitLink = split(\n    ({ query }) => {\n      const definition = getMainDefinition(query);\n      return (\n        definition.kind === \"OperationDefinition\" &&\n        definition.operation === \"subscription\"\n      );\n    },\n    wsLink,\n    httpLink\n  );\n\n  return new ApolloClient({\n    link: from([errorLink, splitLink]),\n    cache: new InMemoryCache(),\n  });\n};\n","import \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport Modal from \"./components/Modal\";\nimport AppRouter from \"./router/AppRouter\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <>\n        <Modal />\n        <AppRouter />\n      </>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}